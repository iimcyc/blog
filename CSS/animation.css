/* 
CSS animation 属性是 
animation-name
animation-duration
animation-timing-function
animation-delay
animation-iteration-count
animation-direction
animation-fill-mode
animation-play-state
属性的一个简写属性形式。
*/

@keyframes name {
  from {}
  10%{}
  50%{}
  90%{}
  to {}
}

.animation {
  /* @keyframes duration | timing-function | delay |
   iteration-count | direction | fill-mode | play-state | name */
  animation: 3s ease-in 1s 2 reverse both paused slidein;

  /* @keyframes duration | timing-function | delay | name */
  animation: 3s linear 1s slidein;

  /* @keyframes duration | name */
  animation: 3s slidein;
}


/* animation-name属性指定应用的一系列动画，每个名称代表一个由@keyframes定义的动画序列。 */
.animation-name {
  /* Single animation */
  animation-name: none;
  animation-name: test_05;
  animation-name: -specific;
  animation-name: sliding-vertically;

  /* Multiple animations */
  animation-name: test1, animation4;
  animation-name: none, -moz-specific, sliding;

  /* Global values */
  animation-name: initial;
  animation-name: inherit;
  animation-name: unset;
}


/* a动画周期的时长 */
.animation-duration {
  animation-duration: 6s;
  animation-duration: 120ms;
  animation-duration: 1s, 15s;
  animation-duration: 10s, 30s, 230ms;
}


/* CSS animation-timing-function属性定义CSS动画在每一动画周期中执行的节奏。可能值为一或多个 <timing-function>。 */
.animation-timing-function {
  /* Keyword values */
  animation-timing-function: ease;
  animation-timing-function: ease-in;
  animation-timing-function: ease-out;
  animation-timing-function: ease-in-out;
  animation-timing-function: linear;
  animation-timing-function: step-start;
  animation-timing-function: step-end;

  /* Function values */
  animation-timing-function: cubic-bezier(0.1, 0.7, 1.0, 0.1);
  animation-timing-function: steps(4, end);
  animation-timing-function: frames(10);

  /* Multiple animations */
  animation-timing-function: ease, step-start, cubic-bezier(0.1, 0.7, 1.0, 0.1);

  /* Global values */
  animation-timing-function: inherit;
  animation-timing-function: initial;
  animation-timing-function: unset;
}


/* animation-delay CSS属性定义动画于何时开始，即从动画应用在元素上到动画开始的这段时间的长度。 */
.animation-delay {
  animation-delay: 3s;
  animation-delay: 2s, 4ms;
}


/* 定义动画在结束前运行的次数 */
.animation-iteration-count {
  /* 值为关键字 */
  animation-iteration-count: infinite;

  /* 值为数字 */
  animation-iteration-count: 3;
  animation-iteration-count: 2.4;

  /* 指定多个值 */
  animation-iteration-count: 2, 0, infinite;
}


/* 是否反向播放 */
/* <single-animation-direction> = normal | reverse | alternate | alternate-reverse */
.animation-direction {
  animation-direction: normal;
  animation-direction: reverse;
  animation-direction: alternate;
  animation-direction: alternate-reverse;
  animation-direction: normal, reverse;
  animation-direction: alternate, reverse, normal;
}



/* 设置CSS动画在执行之前和之后如何将样式应用于其目标。 */
.animation-fill-mode {
  /* Single animation */
  animation-fill-mode: none;
  animation-fill-mode: forwards;  
  animation-fill-mode: backwards;
  animation-fill-mode: both;

  /* Multiple animations */
  animation-fill-mode: none, backwards;
  animation-fill-mode: both, forwards, none;
}



/* 属性定义一个动画是否运行或者暂停 */
.animation-play-state {
  /* Single animation */
  animation-play-state: running;
  animation-play-state: paused;

  /* Multiple animations */
  animation-play-state: paused, running, running;

  /* Global values */
  animation-play-state: inherit;
  animation-play-state: initial;
  animation-play-state: unset;
}
